#!/usr/bin/env ruby

require 'lerna/strategy_selector'
require 'lerna/state'

def log(str)
  time = Time.now.utc
  timestamp = time.strftime('%Y-%m-%dT%H:%M:%S.') << '%06dZ' % time.usec
  puts '[%s #%d] %s' % [timestamp, Process.pid, str]
end

strategies = %w[
  external-digital-only
  internal-only
]

trap('TERM') {
  log 'Exiting'
  exit
}

state = Lerna::State.new
strategy_selector = Lerna::StrategySelector.new

loop do
  state.scan!

  if state.changed?
    log state.displays.
      map { |d| "#{d.name}#{d.connected? ? '*' : ''}" }.
      join(' ')
    strategy = strategy_selector.call(strategies, state.displays)
    if strategy
      log "Using #{strategy.class}"
      system 'xrandr', *strategy.configuration
      system 'xset dpms force on'
    else
      log 'No applicable strategy found'
    end
  end

  sleep 2
end
